apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "common.fullname" . }}
  labels:
{{ include "common.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "common.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "common.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      {{ if or .Values.terraNfs .Values.configmap -}}
      volumes:
      {{ if .Values.terraNfs -}}
      - name: {{ include "common.fullname" . }}-nfs
        nfs:
          server: core.terra.fap.no
          path: /fastest/nfs/kubernetes/{{ include "common.fullname" . }}
      {{- end }}
      {{- if .Values.configmap }}
      - name: configmapping
        configMap:
          name: {{ include "common.fullname" . }}
      {{- end }}
      {{- end }}

      containers:
        - name: {{ include "common.fullname" . }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          {{ with .Values.env -}}
          env:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}

          {{ if or .Values.terraNfs .Values.configmap -}}
          volumeMounts:
          {{ if .Values.terraNfs -}}
          - name: {{ include "common.fullname" . }}-nfs
            mountPath: {{ .Values.terraNfs.containerPath }}
          {{- end }}
          {{- if .Values.configmapping }}
          {{- range .Values.configmapping }}
          - name: configmapping
            mountPath: {{ .mountPath }}
            subPath: {{ .configMapKey }}
            readOnly: true
          {{- end }}
          {{- end }}
          {{- end }}

          ports:
            - name: http
              containerPort: {{ .Values.container.port }}
              protocol: TCP
          {{ if .Values.liveness -}}
          livenessProbe:
            httpGet:
              path: /
              port: http
          {{- end }}
          {{ if .Values.readiness -}}
          readinessProbe:
            httpGet:
              path: /
              port: http
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
